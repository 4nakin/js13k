{"ts":1347280981459,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1347280982699,"patch":[[{"diffs":[[1,"//from introduction to canvas http://simonsarris.com/blog/510-making-html5-canvas-useful\n// Constructor for Shape objects to hold data for all drawn objects.\n// For now they will just be defined as rectangles.\nfunction Bullet(x, y, w, angle, fill) {\n  // This is a very simple and unsafe constructor. \n  // All we're doing is checking if the values exist.\n  // \"x || 0\" just means \"if there is a value for x, use that. Otherwise use 0.\"\n  this.x = x || 0;\n  this.y = y || 0;\n  this.w = w || 1;\n  this.origAngle = angle || 0;\n  this.angle = Math.PI  + this.origAngle;\n  this.fill = fill || '#AAAAAA';\n  \n  this.offset = 1;\n}\n \n// Draws this shape to a given context\nBullet.prototype.draw = function(ctx) {\n    ctx.save();\n    \n    \n    context.beginPath();    \n    \n    ctx.translate(game.tower.x, game.tower.y);\n    ctx.rotate(this.angle); \n    ctx.fillStyle = 'rgba(0,245,245, 0.1 )';\n    context.fillRect(0, 0, 200, 200);\n          \n    ctx.fillStyle = this.fill;\n    context.arc( 0, 25+this.offset, this.w, 0, Math.PI * 2, true );\n    context.closePath();\n    context.fill();\n     ctx.restore();\n     \n    this.updatePosition(ctx);\n  //ctx.fillRect(this.x, this.y, this.w, this.h);\n};\n\nBullet.prototype.updatePosition = function(ctx) {\n    //var a = mouse.x - this.x;\n    //var b = mouse.y - this.y;\n    //var tg = a/b;\n    //var atan = -Math.PI*2 - Math.atan(tg);\n    \n    var atan = -(this.origAngle + Math.PI*2);// * Math.PI/180;\n    //console.log('bullet atan', atan);\n    var a_b = Math.tan(atan);\n    var xOffset = a_b / this.offset;\n    \n    this.y = game.tower.y - xOffset ;\n    console.log(this.y);\n    ctx.fillStyle = 'rgba(50,245,245, 0.6 )';\n    ctx.fillRect(this.x - this.w /2, this.y - this.w, this.w, this.w);\n    \n    this.offset += 1;\n};"]],"start1":0,"start2":0,"length1":0,"length2":1757}]],"length":1757,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350566932502,"patch":[[{"diffs":[[0,", y, w, "],[-1,"angle"],[1,"dx, dy"],[0,", fill) "]],"start1":227,"start2":227,"length1":21,"length2":22},{"diffs":[[0,"tructor."],[-1," "],[0,"\n  // Al"]],"start1":293,"start2":293,"length1":17,"length2":16},{"diffs":[[0,"his."],[-1,"origAngle = angle"],[1,"dx = dx"],[0," || 0"],[1,".5"],[0,";\n  "]],"start1":497,"start2":497,"length1":30,"length2":22},{"diffs":[[0,"his."],[-1,"angle = Math.PI  + this.origAngle"],[1,"dy = dy || 0.5;\n  this.speed = 12"],[0,";\n  "]],"start1":520,"start2":520,"length1":41,"length2":41},{"diffs":[[0,"A';\n"],[-1,"  \n  this.offset = 1;\n"],[0,"}\n"],[-1," "],[0,"\n// "]],"start1":588,"start2":588,"length1":33,"length2":10},{"diffs":[[0,"tion(ctx"],[1,", num"],[0,") {\n    "],[1,"//"],[0,"ctx.save"]],"start1":662,"start2":662,"length1":24,"length2":31},{"diffs":[[0,"();\n"],[1,"\n"],[0,"    "],[-1,"\n    \n    context"],[1,"ctx.fillStyle = this.fill;\n    ctx"],[0,".beg"]],"start1":693,"start2":693,"length1":29,"length2":47},{"diffs":[[0,"h();"],[-1,"    "],[0,"\n    "],[-1,"\n    "],[1,"//"],[0,"ctx."]],"start1":745,"start2":745,"length1":22,"length2":15},{"diffs":[[0,"wer.y);\n    "],[1,"//"],[0,"ctx.rotate(t"]],"start1":791,"start2":791,"length1":24,"length2":26},{"diffs":[[0,".angle);"],[-1," "],[0,"\n    ctx"]],"start1":820,"start2":820,"length1":17,"length2":16},{"diffs":[[0,"ctx."],[-1,"fillStyle = 'rgba(0,245,245, 0.1"],[1,"arc( this.x, this.y, this.w, 0, Math.PI * 2, true"],[0," )"],[-1,"'"],[0,";\n    c"],[-1,"ontext.fillRect(0, 0, 200, 200);\n          "],[1,"tx.closePath();\n    ctx.fill();\n    // ctx.restore();\n"],[0,"\n    "],[1,"//"],[0,"ctx."]],"start1":833,"start2":833,"length1":98,"length2":127},{"diffs":[[0,"e = "],[-1,"this.fill"],[1,"'rgba(0,245,245, 0.4 )'"],[0,";\n    "],[1,"//"],[0,"context."],[-1,"arc( 0, 25+this.offset, this.w, 0, Math.PI * 2, true );\n    context.closePath();\n    context.fill()"],[1,"fillRect(this.x-this.w, this.y-this.w, this.w*2, this.w*2);\n\n\n    //ctx.fillStyle = 'red';\n    //ctx.font = \"10pt Calibri\""],[0,";\n    "],[-1," "],[1,"//"],[0,"ctx."],[-1,"restore();\n     "],[1,"fillText(num, this.x-this.w, this.y-this.w);\n"],[0,"\n   "]],"start1":968,"start2":968,"length1":157,"length2":226},{"diffs":[[0,"    "],[-1,"//var a = mouse.x - this.x;\n    //var b = mouse.y - this.y;\n    //var tg = a/b;\n    //var atan = -Math.PI*2 - Math.atan(tg);\n    \n    var atan = -(this.origAngle + Math.PI*2);// * Math.PI/180;\n    //console.log('bullet atan', atan);\n    var a_b = Math.tan(atan);\n    var xOffset = a_b / this.offset;\n    \n    this.y = game.tower.y - xOffset ;\n    console.log(this.y);\n    ctx.fillStyle = 'rgba(50,245,245, 0.6 )';\n    ctx.fillRect(this.x - this.w /2, this.y - this.w, this.w, this.w);\n    \n    this.offset += 1"],[1,"this.x = this.x + (this.dx * this.speed);\n    this.y = this.y + (this.dy * this.speed)"],[0,";\n};"]],"start1":1325,"start2":1325,"length1":518,"length2":94}]],"length":1419,"saved":false}
